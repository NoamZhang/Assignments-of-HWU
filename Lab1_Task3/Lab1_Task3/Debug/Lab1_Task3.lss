
Lab1_Task3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000046e  000004e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000046e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004e6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000518  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000558  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b3e  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006d4  00000000  00000000  00001106  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000455  00000000  00000000  000017da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  00001c30  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fd  00000000  00000000  00001d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000493  00000000  00000000  00002139  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000025cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__vector_1>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e6       	ldi	r30, 0x6E	; 110
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 5d 00 	call	0xba	; 0xba <main>
  8e:	0c 94 35 02 	jmp	0x46a	; 0x46a <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <Delay>:
#define F_CPU 16000000UL
#include "util/delay.h"

void Delay()
{
	TCNT1= 0x124F;
  96:	8f e4       	ldi	r24, 0x4F	; 79
  98:	92 e1       	ldi	r25, 0x12	; 18
  9a:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  9e:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	TCCR1A = 0x00;
  a2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = 0x05;
  a6:	85 e0       	ldi	r24, 0x05	; 5
  a8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	while((TIFR1&(1<<TOV1))==0)
  ac:	b0 9b       	sbis	0x16, 0	; 22
  ae:	fe cf       	rjmp	.-4      	; 0xac <Delay+0x16>
	{}
	TCCR1B = 0;
  b0:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIFR1 = (1<<TOV1);
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	86 bb       	out	0x16, r24	; 22
  b8:	08 95       	ret

000000ba <main>:
}

int main(void)
{
	DDRB = 0xFF;
  ba:	8f ef       	ldi	r24, 0xFF	; 255
  bc:	84 b9       	out	0x04, r24	; 4
	DDRD = 0x00;
  be:	1a b8       	out	0x0a, r1	; 10
	EIMSK = (1<<INT0);
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	8d bb       	out	0x1d, r24	; 29
	sei();
  c4:	78 94       	sei
  c6:	ff cf       	rjmp	.-2      	; 0xc6 <main+0xc>

000000c8 <light_1>:
}


void light_1()
{
	PORTB = 0x02;
  c8:	82 e0       	ldi	r24, 0x02	; 2
  ca:	85 b9       	out	0x05, r24	; 5
  cc:	08 95       	ret

000000ce <light_2>:
}

void light_2()
{
	PORTB = 0x01;
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	85 b9       	out	0x05, r24	; 5
  d2:	08 95       	ret

000000d4 <light_3>:
}

void light_3()
{
	PORTB = 0x03;
  d4:	83 e0       	ldi	r24, 0x03	; 3
  d6:	85 b9       	out	0x05, r24	; 5
  d8:	08 95       	ret

000000da <light_4>:
}

void light_4()
{
	PORTB = 0x0B;
  da:	8b e0       	ldi	r24, 0x0B	; 11
  dc:	85 b9       	out	0x05, r24	; 5
  de:	08 95       	ret

000000e0 <light_5>:
}

void light_5()
{
	PORTB = 0x0D;
  e0:	8d e0       	ldi	r24, 0x0D	; 13
  e2:	85 b9       	out	0x05, r24	; 5
  e4:	08 95       	ret

000000e6 <light_6>:
}

void light_6()
{
	PORTB = 0x0F;
  e6:	8f e0       	ldi	r24, 0x0F	; 15
  e8:	85 b9       	out	0x05, r24	; 5
  ea:	08 95       	ret

000000ec <light_OFF>:
}

void light_OFF()
{
	PORTB = 0x00;
  ec:	15 b8       	out	0x05, r1	; 5
  ee:	08 95       	ret

000000f0 <shuffle>:
}

void shuffle()
{
	light_1();
  f0:	0e 94 64 00 	call	0xc8	; 0xc8 <light_1>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f4:	2f ef       	ldi	r18, 0xFF	; 255
  f6:	81 ee       	ldi	r24, 0xE1	; 225
  f8:	94 e0       	ldi	r25, 0x04	; 4
  fa:	21 50       	subi	r18, 0x01	; 1
  fc:	80 40       	sbci	r24, 0x00	; 0
  fe:	90 40       	sbci	r25, 0x00	; 0
 100:	e1 f7       	brne	.-8      	; 0xfa <shuffle+0xa>
 102:	00 c0       	rjmp	.+0      	; 0x104 <shuffle+0x14>
 104:	00 00       	nop
	_delay_ms(100);
	light_OFF();
 106:	0e 94 76 00 	call	0xec	; 0xec <light_OFF>
 10a:	2f ef       	ldi	r18, 0xFF	; 255
 10c:	81 ee       	ldi	r24, 0xE1	; 225
 10e:	94 e0       	ldi	r25, 0x04	; 4
 110:	21 50       	subi	r18, 0x01	; 1
 112:	80 40       	sbci	r24, 0x00	; 0
 114:	90 40       	sbci	r25, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <shuffle+0x20>
 118:	00 c0       	rjmp	.+0      	; 0x11a <shuffle+0x2a>
 11a:	00 00       	nop
	_delay_ms(100);
	light_2();
 11c:	0e 94 67 00 	call	0xce	; 0xce <light_2>
 120:	2f ef       	ldi	r18, 0xFF	; 255
 122:	81 ee       	ldi	r24, 0xE1	; 225
 124:	94 e0       	ldi	r25, 0x04	; 4
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <shuffle+0x36>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <shuffle+0x40>
 130:	00 00       	nop
	_delay_ms(100);
	light_OFF();
 132:	0e 94 76 00 	call	0xec	; 0xec <light_OFF>
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	81 ee       	ldi	r24, 0xE1	; 225
 13a:	94 e0       	ldi	r25, 0x04	; 4
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	80 40       	sbci	r24, 0x00	; 0
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <shuffle+0x4c>
 144:	00 c0       	rjmp	.+0      	; 0x146 <shuffle+0x56>
 146:	00 00       	nop
	_delay_ms(100);
	light_3();
 148:	0e 94 6a 00 	call	0xd4	; 0xd4 <light_3>
 14c:	2f ef       	ldi	r18, 0xFF	; 255
 14e:	81 ee       	ldi	r24, 0xE1	; 225
 150:	94 e0       	ldi	r25, 0x04	; 4
 152:	21 50       	subi	r18, 0x01	; 1
 154:	80 40       	sbci	r24, 0x00	; 0
 156:	90 40       	sbci	r25, 0x00	; 0
 158:	e1 f7       	brne	.-8      	; 0x152 <shuffle+0x62>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <shuffle+0x6c>
 15c:	00 00       	nop
	_delay_ms(100);
	light_OFF();
 15e:	0e 94 76 00 	call	0xec	; 0xec <light_OFF>
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	81 ee       	ldi	r24, 0xE1	; 225
 166:	94 e0       	ldi	r25, 0x04	; 4
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	80 40       	sbci	r24, 0x00	; 0
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <shuffle+0x78>
 170:	00 c0       	rjmp	.+0      	; 0x172 <shuffle+0x82>
 172:	00 00       	nop
	_delay_ms(100);
	light_4();
 174:	0e 94 6d 00 	call	0xda	; 0xda <light_4>
 178:	2f ef       	ldi	r18, 0xFF	; 255
 17a:	81 ee       	ldi	r24, 0xE1	; 225
 17c:	94 e0       	ldi	r25, 0x04	; 4
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	80 40       	sbci	r24, 0x00	; 0
 182:	90 40       	sbci	r25, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <shuffle+0x8e>
 186:	00 c0       	rjmp	.+0      	; 0x188 <shuffle+0x98>
 188:	00 00       	nop
	_delay_ms(100);
	light_OFF();
 18a:	0e 94 76 00 	call	0xec	; 0xec <light_OFF>
 18e:	2f ef       	ldi	r18, 0xFF	; 255
 190:	81 ee       	ldi	r24, 0xE1	; 225
 192:	94 e0       	ldi	r25, 0x04	; 4
 194:	21 50       	subi	r18, 0x01	; 1
 196:	80 40       	sbci	r24, 0x00	; 0
 198:	90 40       	sbci	r25, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <shuffle+0xa4>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <shuffle+0xae>
 19e:	00 00       	nop
	_delay_ms(100);
	light_5();
 1a0:	0e 94 70 00 	call	0xe0	; 0xe0 <light_5>
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	81 ee       	ldi	r24, 0xE1	; 225
 1a8:	94 e0       	ldi	r25, 0x04	; 4
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <shuffle+0xba>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <shuffle+0xc4>
 1b4:	00 00       	nop
	_delay_ms(100);
	light_OFF();
 1b6:	0e 94 76 00 	call	0xec	; 0xec <light_OFF>
 1ba:	2f ef       	ldi	r18, 0xFF	; 255
 1bc:	81 ee       	ldi	r24, 0xE1	; 225
 1be:	94 e0       	ldi	r25, 0x04	; 4
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <shuffle+0xd0>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <shuffle+0xda>
 1ca:	00 00       	nop
	_delay_ms(100);
	light_6();
 1cc:	0e 94 73 00 	call	0xe6	; 0xe6 <light_6>
 1d0:	2f ef       	ldi	r18, 0xFF	; 255
 1d2:	81 ee       	ldi	r24, 0xE1	; 225
 1d4:	94 e0       	ldi	r25, 0x04	; 4
 1d6:	21 50       	subi	r18, 0x01	; 1
 1d8:	80 40       	sbci	r24, 0x00	; 0
 1da:	90 40       	sbci	r25, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <shuffle+0xe6>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <shuffle+0xf0>
 1e0:	00 00       	nop
	_delay_ms(100);	
	light_OFF();
 1e2:	0e 94 76 00 	call	0xec	; 0xec <light_OFF>
 1e6:	2f ef       	ldi	r18, 0xFF	; 255
 1e8:	81 ee       	ldi	r24, 0xE1	; 225
 1ea:	94 e0       	ldi	r25, 0x04	; 4
 1ec:	21 50       	subi	r18, 0x01	; 1
 1ee:	80 40       	sbci	r24, 0x00	; 0
 1f0:	90 40       	sbci	r25, 0x00	; 0
 1f2:	e1 f7       	brne	.-8      	; 0x1ec <shuffle+0xfc>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <shuffle+0x106>
 1f6:	00 00       	nop
 1f8:	08 95       	ret

000001fa <__vector_1>:
	_delay_ms(100);					
}

ISR (INT0_vect)
{
 1fa:	1f 92       	push	r1
 1fc:	0f 92       	push	r0
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	0f 92       	push	r0
 202:	11 24       	eor	r1, r1
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	ef 93       	push	r30
 21a:	ff 93       	push	r31
	shuffle();
 21c:	0e 94 78 00 	call	0xf0	; 0xf0 <shuffle>
	int dice_number = rand() % 6 + 1;
 220:	0e 94 c2 01 	call	0x384	; 0x384 <rand>
 224:	66 e0       	ldi	r22, 0x06	; 6
 226:	70 e0       	ldi	r23, 0x00	; 0
 228:	0e 94 4e 01 	call	0x29c	; 0x29c <__divmodhi4>
 22c:	01 96       	adiw	r24, 0x01	; 1
	switch(dice_number)
 22e:	83 30       	cpi	r24, 0x03	; 3
 230:	91 05       	cpc	r25, r1
 232:	a1 f0       	breq	.+40     	; 0x25c <__vector_1+0x62>
 234:	34 f4       	brge	.+12     	; 0x242 <__vector_1+0x48>
 236:	81 30       	cpi	r24, 0x01	; 1
 238:	91 05       	cpc	r25, r1
 23a:	51 f0       	breq	.+20     	; 0x250 <__vector_1+0x56>
 23c:	02 97       	sbiw	r24, 0x02	; 2
 23e:	59 f0       	breq	.+22     	; 0x256 <__vector_1+0x5c>
 240:	18 c0       	rjmp	.+48     	; 0x272 <__vector_1+0x78>
 242:	85 30       	cpi	r24, 0x05	; 5
 244:	91 05       	cpc	r25, r1
 246:	81 f0       	breq	.+32     	; 0x268 <__vector_1+0x6e>
 248:	64 f0       	brlt	.+24     	; 0x262 <__vector_1+0x68>
 24a:	06 97       	sbiw	r24, 0x06	; 6
 24c:	81 f0       	breq	.+32     	; 0x26e <__vector_1+0x74>
 24e:	11 c0       	rjmp	.+34     	; 0x272 <__vector_1+0x78>
	{
		case 1:light_1();break;
 250:	0e 94 64 00 	call	0xc8	; 0xc8 <light_1>
 254:	0e c0       	rjmp	.+28     	; 0x272 <__vector_1+0x78>
		case 2:light_2();break;
 256:	0e 94 67 00 	call	0xce	; 0xce <light_2>
 25a:	0b c0       	rjmp	.+22     	; 0x272 <__vector_1+0x78>
		case 3:light_3();break;
 25c:	0e 94 6a 00 	call	0xd4	; 0xd4 <light_3>
 260:	08 c0       	rjmp	.+16     	; 0x272 <__vector_1+0x78>
		case 4:light_4();break;
 262:	0e 94 6d 00 	call	0xda	; 0xda <light_4>
 266:	05 c0       	rjmp	.+10     	; 0x272 <__vector_1+0x78>
		case 5:light_5();break;
 268:	0e 94 70 00 	call	0xe0	; 0xe0 <light_5>
 26c:	02 c0       	rjmp	.+4      	; 0x272 <__vector_1+0x78>
		case 6:light_6();break;
 26e:	0e 94 73 00 	call	0xe6	; 0xe6 <light_6>
	}
	Delay();
 272:	0e 94 4b 00 	call	0x96	; 0x96 <Delay>
	light_OFF();
 276:	0e 94 76 00 	call	0xec	; 0xec <light_OFF>
}
 27a:	ff 91       	pop	r31
 27c:	ef 91       	pop	r30
 27e:	bf 91       	pop	r27
 280:	af 91       	pop	r26
 282:	9f 91       	pop	r25
 284:	8f 91       	pop	r24
 286:	7f 91       	pop	r23
 288:	6f 91       	pop	r22
 28a:	5f 91       	pop	r21
 28c:	4f 91       	pop	r20
 28e:	3f 91       	pop	r19
 290:	2f 91       	pop	r18
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <__divmodhi4>:
 29c:	97 fb       	bst	r25, 7
 29e:	07 2e       	mov	r0, r23
 2a0:	16 f4       	brtc	.+4      	; 0x2a6 <__divmodhi4+0xa>
 2a2:	00 94       	com	r0
 2a4:	07 d0       	rcall	.+14     	; 0x2b4 <__divmodhi4_neg1>
 2a6:	77 fd       	sbrc	r23, 7
 2a8:	09 d0       	rcall	.+18     	; 0x2bc <__divmodhi4_neg2>
 2aa:	0e 94 62 01 	call	0x2c4	; 0x2c4 <__udivmodhi4>
 2ae:	07 fc       	sbrc	r0, 7
 2b0:	05 d0       	rcall	.+10     	; 0x2bc <__divmodhi4_neg2>
 2b2:	3e f4       	brtc	.+14     	; 0x2c2 <__divmodhi4_exit>

000002b4 <__divmodhi4_neg1>:
 2b4:	90 95       	com	r25
 2b6:	81 95       	neg	r24
 2b8:	9f 4f       	sbci	r25, 0xFF	; 255
 2ba:	08 95       	ret

000002bc <__divmodhi4_neg2>:
 2bc:	70 95       	com	r23
 2be:	61 95       	neg	r22
 2c0:	7f 4f       	sbci	r23, 0xFF	; 255

000002c2 <__divmodhi4_exit>:
 2c2:	08 95       	ret

000002c4 <__udivmodhi4>:
 2c4:	aa 1b       	sub	r26, r26
 2c6:	bb 1b       	sub	r27, r27
 2c8:	51 e1       	ldi	r21, 0x11	; 17
 2ca:	07 c0       	rjmp	.+14     	; 0x2da <__udivmodhi4_ep>

000002cc <__udivmodhi4_loop>:
 2cc:	aa 1f       	adc	r26, r26
 2ce:	bb 1f       	adc	r27, r27
 2d0:	a6 17       	cp	r26, r22
 2d2:	b7 07       	cpc	r27, r23
 2d4:	10 f0       	brcs	.+4      	; 0x2da <__udivmodhi4_ep>
 2d6:	a6 1b       	sub	r26, r22
 2d8:	b7 0b       	sbc	r27, r23

000002da <__udivmodhi4_ep>:
 2da:	88 1f       	adc	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	5a 95       	dec	r21
 2e0:	a9 f7       	brne	.-22     	; 0x2cc <__udivmodhi4_loop>
 2e2:	80 95       	com	r24
 2e4:	90 95       	com	r25
 2e6:	bc 01       	movw	r22, r24
 2e8:	cd 01       	movw	r24, r26
 2ea:	08 95       	ret

000002ec <do_rand>:
 2ec:	8f 92       	push	r8
 2ee:	9f 92       	push	r9
 2f0:	af 92       	push	r10
 2f2:	bf 92       	push	r11
 2f4:	cf 92       	push	r12
 2f6:	df 92       	push	r13
 2f8:	ef 92       	push	r14
 2fa:	ff 92       	push	r15
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
 300:	ec 01       	movw	r28, r24
 302:	68 81       	ld	r22, Y
 304:	79 81       	ldd	r23, Y+1	; 0x01
 306:	8a 81       	ldd	r24, Y+2	; 0x02
 308:	9b 81       	ldd	r25, Y+3	; 0x03
 30a:	61 15       	cp	r22, r1
 30c:	71 05       	cpc	r23, r1
 30e:	81 05       	cpc	r24, r1
 310:	91 05       	cpc	r25, r1
 312:	21 f4       	brne	.+8      	; 0x31c <do_rand+0x30>
 314:	64 e2       	ldi	r22, 0x24	; 36
 316:	79 ed       	ldi	r23, 0xD9	; 217
 318:	8b e5       	ldi	r24, 0x5B	; 91
 31a:	97 e0       	ldi	r25, 0x07	; 7
 31c:	2d e1       	ldi	r18, 0x1D	; 29
 31e:	33 ef       	ldi	r19, 0xF3	; 243
 320:	41 e0       	ldi	r20, 0x01	; 1
 322:	50 e0       	ldi	r21, 0x00	; 0
 324:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <__divmodsi4>
 328:	49 01       	movw	r8, r18
 32a:	5a 01       	movw	r10, r20
 32c:	9b 01       	movw	r18, r22
 32e:	ac 01       	movw	r20, r24
 330:	a7 ea       	ldi	r26, 0xA7	; 167
 332:	b1 e4       	ldi	r27, 0x41	; 65
 334:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__muluhisi3>
 338:	6b 01       	movw	r12, r22
 33a:	7c 01       	movw	r14, r24
 33c:	ac ee       	ldi	r26, 0xEC	; 236
 33e:	b4 ef       	ldi	r27, 0xF4	; 244
 340:	a5 01       	movw	r20, r10
 342:	94 01       	movw	r18, r8
 344:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__mulohisi3>
 348:	dc 01       	movw	r26, r24
 34a:	cb 01       	movw	r24, r22
 34c:	8c 0d       	add	r24, r12
 34e:	9d 1d       	adc	r25, r13
 350:	ae 1d       	adc	r26, r14
 352:	bf 1d       	adc	r27, r15
 354:	b7 ff       	sbrs	r27, 7
 356:	03 c0       	rjmp	.+6      	; 0x35e <do_rand+0x72>
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	a1 09       	sbc	r26, r1
 35c:	b0 48       	sbci	r27, 0x80	; 128
 35e:	88 83       	st	Y, r24
 360:	99 83       	std	Y+1, r25	; 0x01
 362:	aa 83       	std	Y+2, r26	; 0x02
 364:	bb 83       	std	Y+3, r27	; 0x03
 366:	9f 77       	andi	r25, 0x7F	; 127
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	ff 90       	pop	r15
 36e:	ef 90       	pop	r14
 370:	df 90       	pop	r13
 372:	cf 90       	pop	r12
 374:	bf 90       	pop	r11
 376:	af 90       	pop	r10
 378:	9f 90       	pop	r9
 37a:	8f 90       	pop	r8
 37c:	08 95       	ret

0000037e <rand_r>:
 37e:	0e 94 76 01 	call	0x2ec	; 0x2ec <do_rand>
 382:	08 95       	ret

00000384 <rand>:
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	91 e0       	ldi	r25, 0x01	; 1
 388:	0e 94 76 01 	call	0x2ec	; 0x2ec <do_rand>
 38c:	08 95       	ret

0000038e <srand>:
 38e:	a0 e0       	ldi	r26, 0x00	; 0
 390:	b0 e0       	ldi	r27, 0x00	; 0
 392:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 396:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 39a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 39e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 3a2:	08 95       	ret

000003a4 <__divmodsi4>:
 3a4:	05 2e       	mov	r0, r21
 3a6:	97 fb       	bst	r25, 7
 3a8:	1e f4       	brtc	.+6      	; 0x3b0 <__divmodsi4+0xc>
 3aa:	00 94       	com	r0
 3ac:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__negsi2>
 3b0:	57 fd       	sbrc	r21, 7
 3b2:	07 d0       	rcall	.+14     	; 0x3c2 <__divmodsi4_neg2>
 3b4:	0e 94 04 02 	call	0x408	; 0x408 <__udivmodsi4>
 3b8:	07 fc       	sbrc	r0, 7
 3ba:	03 d0       	rcall	.+6      	; 0x3c2 <__divmodsi4_neg2>
 3bc:	4e f4       	brtc	.+18     	; 0x3d0 <__divmodsi4_exit>
 3be:	0c 94 e9 01 	jmp	0x3d2	; 0x3d2 <__negsi2>

000003c2 <__divmodsi4_neg2>:
 3c2:	50 95       	com	r21
 3c4:	40 95       	com	r20
 3c6:	30 95       	com	r19
 3c8:	21 95       	neg	r18
 3ca:	3f 4f       	sbci	r19, 0xFF	; 255
 3cc:	4f 4f       	sbci	r20, 0xFF	; 255
 3ce:	5f 4f       	sbci	r21, 0xFF	; 255

000003d0 <__divmodsi4_exit>:
 3d0:	08 95       	ret

000003d2 <__negsi2>:
 3d2:	90 95       	com	r25
 3d4:	80 95       	com	r24
 3d6:	70 95       	com	r23
 3d8:	61 95       	neg	r22
 3da:	7f 4f       	sbci	r23, 0xFF	; 255
 3dc:	8f 4f       	sbci	r24, 0xFF	; 255
 3de:	9f 4f       	sbci	r25, 0xFF	; 255
 3e0:	08 95       	ret

000003e2 <__muluhisi3>:
 3e2:	0e 94 26 02 	call	0x44c	; 0x44c <__umulhisi3>
 3e6:	a5 9f       	mul	r26, r21
 3e8:	90 0d       	add	r25, r0
 3ea:	b4 9f       	mul	r27, r20
 3ec:	90 0d       	add	r25, r0
 3ee:	a4 9f       	mul	r26, r20
 3f0:	80 0d       	add	r24, r0
 3f2:	91 1d       	adc	r25, r1
 3f4:	11 24       	eor	r1, r1
 3f6:	08 95       	ret

000003f8 <__mulshisi3>:
 3f8:	b7 ff       	sbrs	r27, 7
 3fa:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__muluhisi3>

000003fe <__mulohisi3>:
 3fe:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__muluhisi3>
 402:	82 1b       	sub	r24, r18
 404:	93 0b       	sbc	r25, r19
 406:	08 95       	ret

00000408 <__udivmodsi4>:
 408:	a1 e2       	ldi	r26, 0x21	; 33
 40a:	1a 2e       	mov	r1, r26
 40c:	aa 1b       	sub	r26, r26
 40e:	bb 1b       	sub	r27, r27
 410:	fd 01       	movw	r30, r26
 412:	0d c0       	rjmp	.+26     	; 0x42e <__udivmodsi4_ep>

00000414 <__udivmodsi4_loop>:
 414:	aa 1f       	adc	r26, r26
 416:	bb 1f       	adc	r27, r27
 418:	ee 1f       	adc	r30, r30
 41a:	ff 1f       	adc	r31, r31
 41c:	a2 17       	cp	r26, r18
 41e:	b3 07       	cpc	r27, r19
 420:	e4 07       	cpc	r30, r20
 422:	f5 07       	cpc	r31, r21
 424:	20 f0       	brcs	.+8      	; 0x42e <__udivmodsi4_ep>
 426:	a2 1b       	sub	r26, r18
 428:	b3 0b       	sbc	r27, r19
 42a:	e4 0b       	sbc	r30, r20
 42c:	f5 0b       	sbc	r31, r21

0000042e <__udivmodsi4_ep>:
 42e:	66 1f       	adc	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	1a 94       	dec	r1
 438:	69 f7       	brne	.-38     	; 0x414 <__udivmodsi4_loop>
 43a:	60 95       	com	r22
 43c:	70 95       	com	r23
 43e:	80 95       	com	r24
 440:	90 95       	com	r25
 442:	9b 01       	movw	r18, r22
 444:	ac 01       	movw	r20, r24
 446:	bd 01       	movw	r22, r26
 448:	cf 01       	movw	r24, r30
 44a:	08 95       	ret

0000044c <__umulhisi3>:
 44c:	a2 9f       	mul	r26, r18
 44e:	b0 01       	movw	r22, r0
 450:	b3 9f       	mul	r27, r19
 452:	c0 01       	movw	r24, r0
 454:	a3 9f       	mul	r26, r19
 456:	70 0d       	add	r23, r0
 458:	81 1d       	adc	r24, r1
 45a:	11 24       	eor	r1, r1
 45c:	91 1d       	adc	r25, r1
 45e:	b2 9f       	mul	r27, r18
 460:	70 0d       	add	r23, r0
 462:	81 1d       	adc	r24, r1
 464:	11 24       	eor	r1, r1
 466:	91 1d       	adc	r25, r1
 468:	08 95       	ret

0000046a <_exit>:
 46a:	f8 94       	cli

0000046c <__stop_program>:
 46c:	ff cf       	rjmp	.-2      	; 0x46c <__stop_program>
